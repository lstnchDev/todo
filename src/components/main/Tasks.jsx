import Button from "../../UI/Button";
import "./styles/tasks.less"
import { useEffect, useState } from "react";
import Popup from "../../UI/Popup";
import { db } from './../../firebase/config';
import { collection,  onSnapshot, query, where } from "firebase/firestore";
import TaskItem from "./TaskItem";
import Input from "../../UI/Input";
import { useDispatch, useSelector } from "react-redux";
import  { getTasks } from "../../redux/slices/getTaskSlices";
import Modal from 'react-modal';


/**
 * 
 * @param {boolean} tasksState - —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–∞–∫–æ–π —Ç–∏–ø –∑–∞–¥–∞—á –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å (–æ—Ç–∫—Ä—ã—Ç—ã–µ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ)
 * @returns {React.ReactElement} - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –∑–∞–¥–∞—á–∞–º–∏
 */
const Tasks = ({tasksState})=>{
    const dispatch = useDispatch()

    //—Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–ø–∞–ø–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É"
    const [popupState, setPopup] = useState(false)

    /**
     * —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∑–∞–¥–∞—á –ø–æ –¥–∞—Ç–µ
     * @param {[]} a - –ø–µ—Ä–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –∑–∞–¥–∞—á–∞–º–∏
     * @param {[]} b - –≤—Ç–æ—Ä–æ–π –º–∞—Å—Å–∏–≤ —Å –∑–∞–¥–∞—á–∞–º–∏
     * @returns {string}  
     */
     const sortByDate = (a, b) => {
        console.log((a))
        return (a.finished.seconds - b.finished.seconds)
     }
      
    //–ø–æ–ª—É—á–∞–µ–º –∏–∑ —Ä–µ–¥—É—Å–µ—Ä–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π uid –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const uId = useSelector((state)=> state.getAuthSlices.uId)
    
    //—Å–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è popupState
    const setAddState = ()=> setPopup(!popupState)
    
    
    //–∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è tasksState
    const myTasks = tasksState ? "–í–∞—à–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:" : "–í–∞—à–∏ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∑–∞–¥–∞—á–∏: "

    useEffect(()=>{
        //–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ cloud firestore 
        const q = query(collection(db, 'tasks'),  where("state", "==", tasksState), where("uid", "==", uId))
        
        onSnapshot(q, (querySnapshot)=>{
            //–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –∑–∞–¥–∞—á –∏ –¥–∏—Å–ø–∞—Ç—á–∞
            const arr = []
            querySnapshot.forEach((doc)=>{
                arr.push({...doc.data(), id: doc.id})
                arr.sort(sortByDate)
            })
            dispatch(getTasks(arr))

          })
      
    }, [tasksState, uId])


    //–ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á –∏–∑ —Ä–µ–¥—É—Å–µ—Ä–∞
    const tasks = useSelector((state)=> (state.getTaskSlices.items))

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–¥–∞—á –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∑–∞–¥–∞—á–∏, –µ—Å–ª–∏ –∑–∞–¥–∞—á–∏ –∏–º–µ—é—Ç—Å—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const taskItem = tasks.length>0 ? tasks.map((task)=> 
        <TaskItem 
            key={task.id}
            title={task.title}
            id={task.id}
            stateTask={task.state}
            description={task.description}
            finished={task.finished}
            file={task.file}
        />) : <h2>–ó–∞–¥–∞—á –Ω–µ—Çüòì</h2>

    return (
        <div className="main__tasks">
            <Button onclick={setAddState} className="button" title='–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É'/>
            
            {/* –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ react-modal */}
            <Modal 
                ariaHideApp={false}
                id="modal"
                className="modal"
                isOpen={popupState}
                onRequestClose={setAddState}>
                <Popup>
                    <Input onAddState={setAddState}/>
                </Popup>
             </Modal>
                  <h1>{myTasks}</h1>
            <div className="task">
                {taskItem}
              </div>
             

        </div>
    )
}

export default Tasks;